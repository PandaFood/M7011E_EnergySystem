version: '3'
 
services:

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/services:/etc/nginx/conf.d/
    ports:  
      - 80:80
      - 443:443
    links:
      - prosumer
      - simulator
      - authenticator
    networks:
      - webNet

  prosumer:
    build: ./Prosumer
    container_name: "prosumer-web"
    command: >
      sh -c "npm install &&
             npm run watch"
    volumes:
      - ./Prosumer:/usr/src/app/
    networks:
      - webNet
#    ports:  
#      - "3000:3000"

  frontend:
    build: ./Frontend
    container_name: "frontend"
    command: >
      sh -c "npm install &&
            npm run serve"
    volumes:
      - ./Frontend:/usr/src/app/
    networks:
      - webNet

  simulator:
    build: ./Simulator
    container_name: "simulator-rest"
    command: >
      sh -c "npm install &&
             npm run watch"
    volumes:
      - ./Simulator:/usr/src/app/
    networks:
      - simulatorNet
      - webNet
#    ports:  
#      - "3100:3000"
    depends_on:
      - simDB
    links:
      - simDB
    environment:
      PGHOST: simDB
      PGUSER: sim
      PGPASSWORD: password
      PGDATABASE: simulator
  
  authenticator:
    build: ./Authenticator
    container_name: "authenticator-rest"
    command: >
      sh -c "npm install &&
             npm run watch"
    volumes:
      - ./Authenticator:/usr/src/app/
    networks:
      - authNet
      - webNet
#    ports:  
#      - "3101:3000"
    depends_on:
      - authDB
    links:
      - authDB
    environment:
      PGHOST: authDB
      PGUSER: auth
      PGPASSWORD: password
      PGDATABASE: authenticator
    
  simDB:
    image: postgres
    container_name: "simulation-postgressdb"
    environment:
      POSTGRES_USER: sim
      POSTGRES_DB: simulator
      POSTGRES_PASSWORD: password
    networks: 
      simulatorNet:
        aliases: 
          - simDB
    volumes: 
      - ./Simulator/postgres/schemas/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./Simulator/postgres/schemas/dummy_info.sql:/docker-entrypoint-initdb.d/20-init.sql

  authDB:
    image: postgres
    container_name: "authentication-postgressdb"
    environment:
      POSTGRES_USER: auth
      POSTGRES_DB: authenticator
      POSTGRES_PASSWORD: password
    networks: 
      authNet:
        aliases: 
          - authDB
    volumes: 
      - ./Authenticator/postgres/schemas/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./Authenticator/postgres/schemas/dummy_info.sql:/docker-entrypoint-initdb.d/20-init.sql

  postgressAdmin:
    image: dpage/pgadmin4
    container_name: "postgress-MyAdmin"
    depends_on:
      - simDB
      - authDB
    links: 
      - simDB
      - authDB
    networks:
      - simulatorNet
      - authNet
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "3001:80"

networks: 
  simulatorNet:
  authNet:
  webNet:
